console.log('script loaded');
const data = {
  time: [
    1752240990000, 1752240991000, 1752240993000, 1752240994000, 1752240995000,
    1752240996000, 1752240997000, 1752240999000, 1752241000000, 1752241001000,
    1752241002000, 1752241003000, 1752241004000, 1752241006000, 1752241007000,
    1752241008000, 1752241009000, 1752241010000, 1752241012000, 1752241013000,
    1752241014000, 1752241015000, 1752241016000, 1752241018000, 1752241019000,
    1752241020000, 1752241021000, 1752241022000, 1752241024000, 1752241025000,
    1752241026000, 1752241027000, 1752241028000, 1752241030000, 1752241031000,
    1752241032000, 1752241033000, 1752241035000, 1752241036000, 1752241037000,
    1752241038000, 1752241039000, 1752241041000, 1752241042000, 1752241043000,
    1752241044000, 1752241045000, 1752241047000, 1752241048000, 1752241049000,
    1752241050000, 1752241051000, 1752241053000, 1752241054000, 1752241055000,
    1752241056000, 1752241057000, 1752241059000, 1752241060000, 1752241061000,
    1752241062000, 1752241063000, 1752241065000, 1752241066000, 1752241067000,
    1752241068000, 1752241070000, 1752241071000, 1752241072000, 1752241073000,
    1752241074000, 1752241076000, 1752241077000, 1752241078000, 1752241079000,
    1752241081000, 1752241082000, 1752241083000, 1752241084000, 1752241086000,
    1752241087000, 1752241088000, 1752241089000, 1752241090000, 1752241092000,
    1752241093000, 1752241094000, 1752241095000, 1752241097000, 1752241098000,
    1752241099000, 1752241100000, 1752241101000, 1752241103000, 1752241104000,
    1752241105000, 1752241106000, 1752241108000, 1752241109000, 1752241110000,
    1752241111000, 1752241113000, 1752241114000, 1752241115000, 1752241116000,
    1752241117000, 1752241119000, 1752241120000, 1752241121000, 1752241122000,
    1752241124000, 1752241125000, 1752241126000, 1752241127000, 1752241129000,
    1752241130000, 1752241131000, 1752241132000, 1752241133000, 1752241135000,
    1752241136000, 1752241137000, 1752241138000, 1752241140000, 1752241141000,
    1752241142000, 1752241143000, 1752241144000, 1752241146000, 1752241147000,
    1752241148000, 1752241149000, 1752241151000, 1752241152000, 1752241153000,
    1752241154000, 1752241156000, 1752241157000, 1752241158000, 1752241159000,
    1752241160000, 1752241162000, 1752241163000, 1752241164000, 1752241165000,
    1752241167000, 1752241168000, 1752241169000, 1752241170000, 1752241172000,
    1752241173000, 1752241174000, 1752241175000, 1752241176000, 1752241178000,
    1752241179000, 1752241180000, 1752241181000, 1752241183000, 1752241184000,
    1752241185000, 1752241186000, 1752241188000, 1752241189000, 1752241190000,
    1752241191000, 1752241192000, 1752241194000, 1752241195000, 1752241196000,
    1752241197000, 1752241199000, 1752241200000, 1752241201000, 1752241202000,
    1752241203000, 1752241205000, 1752241206000, 1752241207000, 1752241208000,
    1752241211000, 1752241213000, 1752241214000, 1752241215000, 1752241216000,
    1752241218000, 1752241219000, 1752241220000, 1752241221000, 1752241223000,
    1752241224000, 1752241225000, 1752241226000, 1752241227000, 1752241229000,
    1752241230000, 1752241231000, 1752241232000, 1752241234000, 1752241235000,
    1752241236000, 1752241237000, 1752241239000, 1752241240000, 1752241241000,
    1752241242000, 1752241243000, 1752241245000, 1752241246000, 1752241247000,
    1752241248000, 1752241250000, 1752241251000, 1752241252000, 1752241253000,
    1752241254000, 1752241256000, 1752241257000, 1752241258000, 1752241259000,
    1752241261000, 1752241262000, 1752241263000, 1752241264000, 1752241266000,
    1752241267000, 1752241268000, 1752241269000, 1752241270000, 1752241272000,
    1752241273000, 1752241274000, 1752241275000, 1752241277000, 1752241278000,
    1752241279000, 1752241280000, 1752241282000, 1752241283000, 1752241284000,
    1752241285000, 1752241286000, 1752241288000, 1752241289000, 1752241290000,
    1752241291000, 1752241293000, 1752241294000, 1752241295000, 1752241296000,
    1752241298000, 1752241299000, 1752241300000, 1752241301000, 1752241302000,
    1752241304000, 1752241305000, 1752241306000, 1752241307000, 1752241309000,
    1752241310000, 1752241311000, 1752241312000, 1752241314000, 1752241315000,
    1752241316000, 1752241317000, 1752241318000, 1752241320000, 1752241321000,
    1752241322000, 1752241323000, 1752241325000, 1752241326000, 1752241327000,
    1752241328000, 1752241329000, 1752241331000, 1752241332000, 1752241333000,
    1752241334000, 1752241336000, 1752241337000, 1752241338000, 1752241339000,
    1752241341000, 1752241342000, 1752241343000, 1752241344000, 1752241345000,
    1752241347000, 1752241348000, 1752241349000, 1752241350000, 1752241352000,
    1752241353000, 1752241354000, 1752241355000, 1752241357000, 1752241358000,
    1752241359000, 1752241360000, 1752241361000, 1752241363000, 1752241364000,
    1752241365000, 1752241366000, 1752241368000, 1752241369000, 1752241370000,
    1752241371000, 1752241373000, 1752241374000, 1752241375000, 1752241376000,
    1752241378000, 1752241379000, 1752241380000, 1752241381000, 1752241382000,
    1752241384000, 1752241385000, 1752241386000, 1752241387000, 1752241389000,
    1752241390000, 1752241391000, 1752241392000, 1752241394000, 1752241395000,
    1752241396000, 1752241397000, 1752241399000, 1752241400000, 1752241401000,
    1752241402000, 1752241404000, 1752241405000, 1752241406000, 1752241407000,
    1752241408000, 1752241410000, 1752241411000, 1752241412000, 1752241413000,
    1752241415000, 1752241416000, 1752241417000, 1752241419000, 1752241420000,
    1752241421000, 1752241422000, 1752241424000, 1752241425000, 1752241426000,
    1752241427000, 1752241429000, 1752241430000, 1752241431000, 1752241432000,
    1752241434000, 1752241435000, 1752241436000, 1752241438000, 1752241439000,
    1752241440000, 1752241442000, 1752241443000, 1752241444000, 1752241446000,
    1752241447000, 1752241448000, 1752241450000, 1752241451000, 1752241452000,
    1752241453000, 1752241455000, 1752241456000, 1752241457000, 1752241458000,
    1752241460000, 1752241461000, 1752241462000, 1752241463000, 1752241465000,
    1752241466000, 1752241467000, 1752241468000, 1752241470000, 1752241471000,
    1752241472000, 1752241473000, 1752241475000, 1752241476000, 1752241477000,
    1752241479000, 1752241480000, 1752241481000, 1752241483000, 1752241484000,
    1752241485000, 1752241486000, 1752241488000, 1752241489000, 1752241490000,
    1752241491000, 1752241493000, 1752241494000, 1752241495000, 1752241497000,
    1752241498000, 1752241499000, 1752241500000, 1752241502000, 1752241503000,
    1752241504000, 1752241506000, 1752241507000, 1752241508000, 1752241509000,
    1752241511000, 1752241512000, 1752241513000, 1752241515000, 1752241516000,
    1752241517000, 1752241519000, 1752241520000, 1752241521000, 1752241522000,
    1752241524000, 1752241525000, 1752241526000, 1752241528000, 1752241529000,
    1752241530000, 1752241532000, 1752241533000, 1752241534000, 1752241536000,
    1752241537000, 1752241538000, 1752241540000, 1752241541000, 1752241542000,
    1752241544000, 1752241545000, 1752241546000, 1752241548000, 1752241549000,
    1752241550000, 1752241552000, 1752241553000, 1752241554000, 1752241556000,
    1752241557000, 1752241558000, 1752241560000, 1752241561000, 1752241562000,
    1752241564000, 1752241565000, 1752241566000, 1752241567000, 1752241569000,
    1752241570000, 1752241571000,
  ],
  temp: [
    26.5, 26.75, 26.25, 26, 26.5, 26.5, 26.5, 26.5, 26.5, 26.75, 26.5, 26.75,
    26.25, 26.75, 26, 26.75, 26.25, 26.75, 26.5, 26.75, 26.75, 26.5, 26.75,
    26.5, 26.5, 26.25, 26.5, 26.25, 26.5, 26.75, 26.25, 26, 26, 26.5, 26.75,
    26.75, 26.75, 26.75, 26.75, 26.5, 26.75, 26.75, 26.25, 26.75, 26.25, 26.5,
    26.75, 26.25, 26, 26, 26.75, 26.5, 26.75, 26.75, 26.75, 26.5, 26.25, 26.75,
    26.75, 26.5, 26.5, 26.75, 26.5, 26.5, 26.75, 26.75, 26.75, 26, 26.5, 26.75,
    26.75, 26.75, 26, 27, 26.75, 26.5, 26.5, 26.75, 26.75, 26.5, 26.75, 26.75,
    26.25, 26.5, 27, 26.75, 26.5, 26.5, 25.75, 26.75, 26.5, 26.5, 26.5, 26.75,
    26.75, 26.75, 26.75, 26.75, 26.25, 26.5, 26.25, 26.25, 26.25, 26.75, 26.75,
    26, 26.5, 26.5, 26.5, 26.75, 26.5, 26.25, 26.75, 26, 26.75, 26.75, 26.75,
    26.5, 26.75, 26.75, 26.5, 26.5, 26.75, 26.5, 26.25, 26.75, 26.75, 26.5,
    26.75, 26.25, 26.75, 26.75, 26.75, 26.75, 26.25, 26.75, 26.25, 26.75, 26.75,
    26.75, 26.5, 26.5, 26.25, 26.5, 26.75, 26.25, 26.25, 26.5, 26.5, 26.75,
    26.75, 26.75, 26.75, 26.75, 26.25, 26.5, 26.75, 26.5, 26.75, 26.75, 26.75,
    26.5, 26.75, 26.5, 26.5, 26.5, 26.5, 26.5, 26.75, 26.25, 26.5, 26.75, 26.75,
    26.75, 26, 26.25, 26.5, 26.75, 26.75, 26.75, 26.5, 27, 27, 27.25, 27.75,
    27.75, 28.25, 28.5, 28.5, 28.75, 29, 29.25, 29.25, 29.5, 30.25, 29.5, 29.75,
    30.5, 30.25, 30.25, 30.25, 30.5, 30.5, 30.5, 30.75, 30.75, 30.25, 30.25, 30,
    30.75, 30.5, 29.75, 30.5, 30.25, 30, 30.25, 30.5, 30, 30, 29.75, 30, 30, 30,
    29.75, 30, 30, 30.25, 29.5, 30, 30, 29.75, 30.25, 29.5, 30, 29.5, 29.25,
    29.25, 30, 29.75, 29.5, 29.75, 29.75, 29.25, 29.75, 29, 29.5, 29.5, 29.75,
    29, 29.25, 29.25, 29, 29.75, 29.25, 29.5, 29.5, 29.25, 29.25, 29.5, 29.5,
    29.25, 29.25, 29, 29, 29, 29.25, 29, 29.25, 29.25, 29, 29.25, 29.25, 29, 29,
    29.25, 29, 28.75, 29, 28.75, 29, 28.75, 29, 28.75, 28.5, 29, 28.5, 29.25,
    28.75, 29, 28.75, 29, 28.75, 29.25, 28.75, 29, 28.75, 28.75, 29, 29, 28.75,
    28.75, 28.5, 28.75, 28.75, 28.25, 28.25, 28.5, 28.25, 28, 28.75, 28.5,
    28.75, 28.25, 28.5, 28.5, 28.5, 28.75, 28.5, 28.5, 28.75, 28.75, 28.5, 28.5,
    28.5, 28.5, 27.75, 28.5, 28.5, 28.25, 28.25, 28.5, 28.5, 28.5, 28.5, 28.5,
    28.5, 28.25, 28, 28.75, 28.25, 28.25, 28.5, 28.25, 28.25, 28.25, 28.75,
    28.5, 28.25, 27.75, 28.5, 28.5, 28.25, 28.25, 27.5, 28.5, 28.25, 28.5, 28,
    27.5, 28, 28.5, 28.25, 28, 28, 28, 28.25, 28.25, 28.25, 27.75, 27.5, 28, 28,
    28.25, 28.25, 28.25, 28.25, 28, 27.75, 27.5, 28, 27.75, 28, 28.25, 28, 28,
    27.75, 27.75, 27.75, 28, 28.25, 28.25, 27.5, 28, 27.5, 28, 28, 27.5, 28,
    27.75, 28, 27.75, 28, 27.5, 27.75, 27.75, 27.75, 27.5, 27.75, 27.75, 27.75,
    27.75, 27.25, 27.5, 27.75, 27.25, 28, 28, 28, 28, 28, 28, 27.25, 28, 27.75,
    27.5, 27.75, 27.5, 28, 27.75, 27, 27.75, 27.5, 27.5, 27.75, 27.5, 27.75,
    27.5, 27.5, 27.75, 27.75, 27.5, 27.25, 27.25, 27.75, 27, 27, 27.25, 27.75,
    27.25, 27.25, 28, 27.25, 27.75, 27, 27.75, 27.5, 27.5, 28, 27.25, 27.5,
    27.5, 27.25, 27.25, 27.5, 27.5, 27.5, 27,
  ],
};
let chart = null;
// Пример данных
const doShit = (data) => {
  const timeData = data.time; // Unix Epoch
  const tempData = data.temp; // °C

  // Конвертация времени в читаемый формат
  const formatDate = (timestamp) => {
    const date = new Date(timestamp * 1000);
    return date.toLocaleDateString('ru-RU', {
      day: 'numeric',
      month: 'short',
      hour: '2-digit',
      minute: '2-digit',
    });
  };

  // Создание графика
  const ctx = document.getElementById('tempChart').getContext('2d');

  if (chart) chart.destroy();

  chart = new Chart(ctx, {
    type: 'line',
    data: {
      labels: timeData.map(formatDate),
      datasets: [
        {
          label: 'Температура (°C)',
          data: tempData,
          borderColor: 'rgb(255, 99, 132)',
          backgroundColor: 'rgba(255, 99, 132, 0.1)',
          borderWidth: 2,
          pointRadius: 4,
          fill: true,
          tension: 0.3,
        },
      ],
    },
    options: {
      animation: false,
      responsive: true,
      scales: {
        x: {
          title: {
            display: true,
            text: 'Время',
            font: {
              size: 14,
              weight: 'bold',
            },
          },
          grid: {
            display: false,
          },
        },
        y: {
          title: {
            display: true,
            text: 'Температура (°C)',
            font: {
              size: 14,
              weight: 'bold',
            },
          },
          suggestedMin: Math.min(...tempData) - 2,
          suggestedMax: Math.max(...tempData) + 2,
        },
      },
      plugins: {
        tooltip: {
          callbacks: {
            title: (items) => formatDate(timeData[items[0].dataIndex]),
            label: (context) => `Температура: ${context.parsed.y}°C`,
          },
        },
        legend: {
          position: 'top',
          labels: {
            font: {
              size: 14,
            },
          },
        },
      },
    },
  });
  chart.update();
};

function addDataPoint(timestamp, temperature) {
  // Добавляем новую точку в конец набора данных
  chart.data.datasets[0].data.push({
    x: timestamp,
    y: temperature,
  });

  // Обновляем график с анимацией
  chart.update();
}

setInterval(() => {
  addDataPoint(Date.now(), Math.random() * 50);
}, 1000);
setInterval(() => {
  fetch('http://82.202.142.29:3001')
    .then((resp) => resp.json())
    .then(doShit);
}, 1000);
